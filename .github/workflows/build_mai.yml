name: Build Affine IO-Mai

on:
  push:
    branches: [ main, master ]
    paths:
      - 'mai2io/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'mai2io/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
        working-directory: mai2io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-pkg-config

      - name: Build Mai DLL
        run: |
          gcc -m64 -shared mai2io.c config.c serial.c dprintf.c -o mai2io_affine.dll -lsetupapi

      - name: Build Mai Test Program
        run: |
          gcc -m64 test.c serial.c dprintf.c dfu.c -lsetupapi -luser32 -lkernel32 -Wl,-Bstatic $(pkg-config --cflags --libs libusb-1.0) -Wl,-Bdynamic -o curva_test.exe

      - name: Upload DLL Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mai2io_affine-dll
          path: mai2io/mai2io_affine.dll

      - name: Upload Test Program Artifact
        uses: actions/upload-artifact@v4
        with:
          name: curva_test-exe
          path: mai2io/curva_test.exe

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mai2io/mai2io_affine.dll
            mai2io/curva_test.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install AWS CLI
        if: startsWith(github.ref, 'refs/tags/')
        shell: powershell
        run: |
          choco install awscli -y
          aws --version

      - name: Upload DLL to Cloudflare R2 (tag subdir + latest.json)
        if: startsWith(github.ref, 'refs/tags/')
        shell: powershell
        working-directory: mai2io
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
        run: |
          $tag  = "${env:GITHUB_REF_NAME}"
          $base = "s3://$env:R2_BUCKET/ruminasu/public/scripts/affine/mai2io"
          $dest = "$base/$tag/"

          aws s3 cp "mai2io_affine.dll" "$dest" `
            --endpoint-url "$env:R2_ENDPOINT" `
            --cache-control "public,max-age=31536000,immutable"

          $hash = (Get-FileHash "mai2io_affine.dll" -Algorithm SHA256).Hash.ToLower()
          $size = (Get-Item "mai2io_affine.dll").Length
          $manifestObj = @{
            version     = $tag
            file        = "mai2io_affine.dll"
            size        = $size
            sha256      = $hash
            path        = "/ruminasu/public/scripts/affine/mai2io/$tag/mai2io_affine.dll"
            uploaded_at = (Get-Date).ToString("s")
          }
          $manifestJson = $manifestObj | ConvertTo-Json -Compress
          $manifestJson | Out-File -Encoding utf8 "manifest.json"

          aws s3 cp "manifest.json" "$dest" `
            --endpoint-url "$env:R2_ENDPOINT" `
            --cache-control "public,max-age=31536000,immutable"

          $manifestJson | Out-File -Encoding utf8 "latest.json"
          aws s3 cp "latest.json" "$base/latest.json" `
            --endpoint-url "$env:R2_ENDPOINT" `
            --cache-control "public,max-age=60"
